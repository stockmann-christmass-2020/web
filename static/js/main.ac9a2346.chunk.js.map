{"version":3,"sources":["GLContent/helpers/WebGLCanvas.js","GLContent/helpers/SVGImage.js","GLContent/helpers/GLImage.js","GLContent/helpers/Progress.js","GLContent/helpers/Video.js","GLContent/shaders/Video.js","GLContent/helpers/Snow.js","GLContent/shaders/Snow.js","GLContent/helpers/LightTower.js","GLContent/shaders/LightTower.js","GLContent/helpers/HangingLights.js","GLContent/shaders/HangingLight.js","GLContent/CanvasContent.js","App.js","index.js"],"names":["Canvas","styled","canvas","WebGLCanvas","props","loadContent","unloadContent","canvasID","id","canvasAlpha","alpha","canvasPerformance","performance","ambientIntensity","ambient","ambientColor","resizeNeeded","sceneTime","that","this","scene","traverse","obj","td","previousTime","step","renderer","render","camera","frameRequest","window","requestAnimationFrame","animate","bind","c","document","getElementById","canvasH","clientHeight","canvasW","clientWidth","THREE","position","z","aspect","Math","tan","fov","PI","powerPreference","antialias","stencil","resizeRendererToDisplaySize","domElement","pixelRatio","devicePixelRatio","width","height","needResize","setSize","addEventListener","resize","ww","wh","updateProjectionMatrix","createCamera","createRenderer","addResizeBehavior","ambientLight","add","cancelAnimationFrame","forceContextLoss","className","React","Component","loader","SVGLoader","SVGImage","new","url","onLoad","depthTest","image","load","data","paths","group","i","length","path","material","color","side","depthWrite","shapes","toShapes","j","shape","geometry","applyMatrix4","makeScale","mesh","strokeColor","userData","style","stroke","undefined","setStyle","opacity","strokeOpacity","transparent","jl","subPaths","subPath","pointsToStroke","getPoints","boxSize","setFromObject","getSize","x","y","bsize","xhr","console","log","loaded","total","error","GLImage","src","map","texture","initTexture","scale","Progress","duration","easeFn","onEnd","progress","startTime","finished","start","delay","setTimeout","Date","now","getUnEasedProgress","prog","min","getProgress","result","Video","srcs","uniforms","tex","type","value","vertexShader","fragmentShader","blending","visible","video","createElement","setAttribute","sourceUrl","source","indexOf","appendChild","needsUpdate","minFilter","magFilter","format","Snow","particleAmount","depth","time","resoY","verts","Float32Array","rands","i3","random","particleSystem","tara","move","LightTower","lightDuration","limit","yrand","t","lightUp","HangingLight","sin","CanvasContent","colors","cameraProgress","title","lights","heading","bodyCopy","startCamera","people3","p1","play","p2","snow","content","innerHeight","startY","innerWidth","ev","tarx","clientX","tary","clientY","endZ","panY","cameraTime","tarc","deltaY","max","Number","house","t1","t2","t3","t4","t5","t6","t7","t8","topleft","topright","center","rotation","bg","chars","forEach","floor","clock","hands","hours","minutes","img","people1","alphaTest","people2","createContent","background","Container","div","StartButton","a","hide","Videos","Heading","p","BodyCopy","CanvasContainer","MuteBtn","Portrait","cameraStarted","App","useState","setCameraStarted","muted","setMuted","sortObjects","precision","far","stop","onClick","Data","lang","btn","body","pause","xmlns","version","viewBox","fill","d","alt","basePath","location","host","ReactDOM","StrictMode","basename"],"mappings":"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","file":"static/js/main.ac9a2346.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport * as THREE from 'three';\n\nconst Canvas = styled.canvas`\n  width: 100%;\n  height: 100%;\n`;\n\nclass WebGLCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadContent = props.loadContent;\n    this.unloadContent = props.unloadContent;\n\n    this.canvasID = props.id;\n    this.canvasAlpha = props.alpha || false;\n    this.canvasPerformance = props.performance || 'high-performance';\n    this.ambientIntensity = props.ambient || 0.3;\n    this.ambientColor = props.ambientColor || 0xffffff;\n    this.resizeNeeded = true;\n  }\n\n  animate(sceneTime) {\n    const that = this;\n    that.scene.traverse((obj) => {\n      const td = sceneTime - that.previousTime;\n      if (td > 0 && obj.step) obj.step(td);\n    });\n\n    that.renderer.render(that.scene, that.camera);\n    that.previousTime = sceneTime;\n\n    that.frameRequest = window.requestAnimationFrame(that.animate.bind(that));\n  }\n\n  createCamera() {\n    const c = document.getElementById(this.canvasID);\n    const canvasH = c.clientHeight;\n    const canvasW = c.clientWidth;\n\n    this.camera = new THREE.PerspectiveCamera(\n      90,\n      canvasW / canvasH,\n      0.1,\n      10000\n    );\n\n    this.camera.position.z =\n      canvasW /\n      this.camera.aspect /\n      (2 * Math.tan((this.camera.fov * Math.PI) / 360));\n  }\n\n  createRenderer() {\n    const that = this;\n    this.renderer = new THREE.WebGLRenderer({\n      canvas: document.getElementById(that.canvasID),\n      powerPreference: that.canvasPerformance,\n      antialias: true,\n      stencil: false,\n      alpha: that.canvasAlpha,\n    });\n\n    // this.renderer.sortObjects = false;\n  }\n\n  addResizeBehavior() {\n    const that = this;\n    window.addEventListener('resize', () => {\n      this.resizeNeeded = true;\n    });\n\n    this.scene.step = function () {\n      if (that.resizeNeeded) {\n        that.resizeNeeded = false;\n        this.traverse((obj) => {\n          if (obj.resize) obj.resize();\n        });\n      }\n    };\n\n    function resizeRendererToDisplaySize() {\n      const canvas = that.renderer.domElement;\n      const pixelRatio = window.devicePixelRatio;\n      const width = (canvas.clientWidth * pixelRatio) | 0;\n      const height = (canvas.clientHeight * pixelRatio) | 0;\n      const needResize = canvas.width !== width || canvas.height !== height;\n      if (needResize) {\n        that.renderer.setSize(width, height, false);\n      }\n      return needResize;\n    }\n\n    resizeRendererToDisplaySize();\n\n    that.scene.resize = function () {\n      const ww = document.getElementById(that.canvasID).clientWidth;\n      const wh = document.getElementById(that.canvasID).clientHeight;\n      resizeRendererToDisplaySize();\n\n      that.camera.aspect = ww / wh;\n      that.camera.position.z =\n        ww /\n        that.camera.aspect /\n        (2 * Math.tan((that.camera.fov * Math.PI) / 360));\n\n      that.camera.updateProjectionMatrix();\n    };\n  }\n\n  componentDidMount() {\n    this.scene = new THREE.Scene();\n\n    this.createCamera();\n    this.createRenderer();\n    this.addResizeBehavior();\n\n    this.ambientLight = new THREE.AmbientLight(\n      this.ambientColor,\n      this.ambientIntensity\n    );\n    this.scene.add(this.ambientLight);\n\n    this.loadContent(this.scene, this.camera, this.renderer);\n\n    this.previousTime = 0;\n\n    this.animate(0);\n  }\n\n  componentWillUnmount() {\n    if (this.unloadContent) this.unloadContent();\n    window.cancelAnimationFrame(this.frameRequest);\n    this.renderer.forceContextLoss();\n    // this.renderer.domElement.remove();\n    this.renderer = null;\n    this.scene = null;\n  }\n\n  render() {\n    return <Canvas id={this.props.id} className={this.props.className} />;\n  }\n}\n\nexport default WebGLCanvas;\n","import * as THREE from 'three';\nimport {SVGLoader} from 'three/examples/jsm/loaders/SVGLoader'\n\nconst loader = new SVGLoader();\n\nconst SVGImage = {\n  new: (url, onLoad, depthTest) => {\n    const image = new THREE.Group();\n\n    loader.load(\n      // resource URL\n      url,\n      // called when the resource is loaded\n      function (data) {\n\n        const paths = data.paths;\n        const group = new THREE.Group();\n        for (let i = 0; i < paths.length; i++) {\n\n          const path = paths[i];\n\n          const material = new THREE.MeshBasicMaterial({\n            color: path.color,\n            side: THREE.DoubleSide,\n            depthWrite: !!depthTest,\n            depthTest: !!depthTest\n          });\n\n          const shapes = path.toShapes(true);\n\n          for (let j = 0; j < shapes.length; j++) {\n\n            const shape = shapes[j];\n            const geometry = new THREE.ShapeBufferGeometry(shape);\n            geometry.applyMatrix4(new THREE.Matrix4().makeScale(1, -1, 1));\n            const mesh = new THREE.Mesh(geometry, material);\n            group.add(mesh);\n\n          }\n\n          const strokeColor = path.userData.style.stroke;\n\n          if (strokeColor !== undefined && strokeColor !== 'none') {\n\n            const material = new THREE.MeshBasicMaterial({\n              color: new THREE.Color().setStyle(strokeColor),\n              opacity: path.userData.style.strokeOpacity,\n              transparent: path.userData.style.strokeOpacity < 1,\n              side: THREE.DoubleSide,\n              depthWrite: !!depthTest,\n              depthTest: !!depthTest\n            });\n\n            for (let j = 0, jl = path.subPaths.length; j < jl; j++) {\n              const subPath = path.subPaths[j];\n              const geometry = SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style);\n              geometry.applyMatrix4(new THREE.Matrix4().makeScale(1, -1, 1));\n\n              if (geometry) {\n                const mesh = new THREE.Mesh(geometry, material);\n                group.add(mesh);\n              }\n            }\n          }\n        }\n\n        const boxSize = new THREE.Box3().setFromObject(group).getSize();\n        group.position.x = -boxSize.x / 2;\n        group.position.y = boxSize.y / 2;\n\n        image.add(group);\n        image.bsize = boxSize;\n        onLoad(image);\n\n      },\n      // called when loading is in progresses\n      function (xhr) {\n\n        console.log((xhr.loaded / xhr.total * 100) + '% loaded');\n\n      },\n      // called when loading has errors\n      function (error) {\n\n        console.log('An error happened');\n\n      }\n    );\n\n    return image;\n  }\n}\n\nexport default SVGImage;","import * as THREE from 'three';\n\nconst GLImage = {\n  new: (src, width, height, renderer) => {\n    const loader = new THREE.TextureLoader();\n    const material = new THREE.MeshBasicMaterial({\n      map: loader.load( src , (texture) => {\n        renderer.initTexture(texture);\n      })\n    });\n    material.depthTest = false;\n    material.depthWrite = false;\n    material.transparent = true;\n\n    const geometry = new THREE.PlaneGeometry(1, 1);\n\n    const mesh = new THREE.Mesh(geometry, material);\n    if (width) mesh.scale.x = width;\n    if (height) mesh.scale.y = height;\n\n    return mesh;\n  }\n};\n\nexport default GLImage;","\n\nconst Progress = {\n  new: (duration, easeFn, onEnd) => {\n    const progress = {};\n\n    progress.duration = duration;\n    progress.startTime = null;\n    progress.finished = false;\n\n    progress.start = function(delay) {\n      if(delay) {\n        setTimeout(() => {\n          this.startTime = Date.now();\n        }, delay)\n      } else {\n        this.startTime = Date.now();\n      }\n\n    }\n\n    progress.getUnEasedProgress = function(){\n      if(!this.startTime) return 0;\n      if(this.finished) return 1;\n      const prog = (Date.now() - this.startTime) / this.duration;\n      if (prog >= 1) {\n        this.finished = true;\n        if(onEnd) onEnd();\n      }\n      return Math.min(prog, 1);\n    }\n\n    progress.getProgress = function(){\n      let result = this.getUnEasedProgress();\n      if(easeFn && result) {\n        result = easeFn(result);\n      }\n\n      return result;\n    }\n\n    return progress;\n  }\n};\n\nexport default Progress;","import * as THREE from 'three';\nimport {vertShader, fragShader} from '../shaders/Video';\n\nconst Video = {\n  new: (srcs) => {\n    // Load an image file into a custom material\n    const uniforms = {\n      tex: {\n        type: 't',\n        value: null\n      },\n    }\n\n    const material = new THREE.ShaderMaterial( {\n      uniforms:       uniforms,\n      vertexShader:   vertShader,\n      fragmentShader: fragShader,\n      blending:       THREE.NormalBlending,\n      visible: false,\n      depthWrite: true,\n      depthTest: true,\n      transparent: true,\n      side: THREE.DoubleSide\n    })\n\n    let geometry = new THREE.PlaneGeometry(1, 1);\n    let mesh = new THREE.Mesh(geometry, material);\n\n    let video = document.createElement('video');\n    video.setAttribute('width', '1920');\n    video.setAttribute('height', '1080');\n    video.setAttribute('loop', 'loop');\n    video.setAttribute('muted', 'muted');\n    video.setAttribute('playsinline', 'playsinline');\n\n    srcs.map(sourceUrl => {\n      /* First source element creation */\n      const source = document.createElement(\"source\");\n      source.setAttribute(\"src\", sourceUrl);\n      source.setAttribute(\"type\", sourceUrl.indexOf('mp4') !== -1 ? 'video/mp4' : 'video/webm');\n\n      video.appendChild(source);\n\n      return true;\n    })\n\n    video.addEventListener('loadstart', function () {\n      material.visible = true;\n      material.needsUpdate = true;\n    });\n\n    mesh.video = video;\n    document.getElementById('videos').appendChild(video);\n\n    let texture = new THREE.VideoTexture(video);\n    texture.minFilter = THREE.LinearFilter;\n    texture.magFilter = THREE.LinearFilter;\n    texture.format = THREE.RGBFormat;\n\n    material.uniforms.tex.value = texture;\n\n    return mesh;\n  }\n};\n\nexport default Video;","const vertShader =  `\nprecision mediump float;\nvarying vec2 vUv;\n  \nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n}`;\n\nconst fragShader =  `\nprecision mediump float;\nuniform sampler2D tex;\nvarying vec2 vUv;\n\nvoid main() {\n  vec3 color = vec4(texture2D(tex, vUv)).rgb;\n  float alpha = 1.0;\n  float limit = 0.8;\n  if(color.r > limit && color.g > limit && color.b > limit) discard;\n  if(color.r < 0.1 && color.g < 0.1 && color.b < 0.1) color = vec3(0.0, 0.1411764705882353, 0.10588235294117647);\n  gl_FragColor = vec4(color.rgb, alpha);\n}`;\n\nexport {vertShader, fragShader};","/* eslint-disable no-restricted-globals */\nimport * as THREE from 'three';\nimport {vertShader, fragShader} from \"../shaders/Snow\";\nimport move from '@mixd/utils/functions/move';\n\nconst Snow = {\n  new: (src, particleAmount, width, height, depth) => {\n    let loader = new THREE.TextureLoader();\n\n    const uniforms = {\n      tex: {\n        type: 't',\n        value: loader.load( src )\n      },\n      time: {type: '1f', value: 0},\n      resoY: {type: '1f', value: height},\n      alpha: {type: '1f', value: 0}\n    }\n\n    const material = new THREE.ShaderMaterial( {\n      uniforms:       uniforms,\n      vertexShader:   vertShader,\n      fragmentShader: fragShader,\n      blending:       THREE.NormalBlending,\n      depthTest:      true,\n      depthWrite:     false,\n      transparent:    true,\n    });\n\n    const geometry = new THREE.BufferGeometry();\n    let verts = new Float32Array( particleAmount * 3 );\n    let rands = new Float32Array( particleAmount * 1 );\n    for ( let i = 0, i3 = 0; i < particleAmount; i ++, i3 += 3 ) {\n      verts[ i3 ] = Math.random()*width - width / 2;\n      verts[ i3 + 1 ] = Math.random()*height - height / 2;\n      verts[ i3 + 2 ] = Math.random()*depth - depth / 2;\n      rands[ i ] = Math.random();\n    }\n    geometry.setAttribute( 'position', new THREE.BufferAttribute( verts, 3 ) );\n    geometry.setAttribute( 'a_rands', new THREE.BufferAttribute( rands, 1 ) );\n\n    const particleSystem = new THREE.Points( geometry, material );\n\n    particleSystem.tara = 0;\n    particleSystem.step = function(td){\n      this.material.uniforms.time.value += 2;\n      this.material.uniforms.alpha.value = move(this.material.uniforms.alpha.value, this.tara, td, 10);\n    }\n\n\n    return particleSystem;\n  }\n};\n\nexport default Snow;","const vertShader =  `\nprecision mediump float;\nattribute float a_rands;\nuniform float time;\nuniform float resoY;\n  \nvoid main() {\n  float y = resoY / 2.0 - mod(position.y + time, resoY*0.6); \n  float x = position.x + sin(y * 0.01 + a_rands) * 10.0; \n  gl_Position = projectionMatrix * modelViewMatrix * vec4(x, y, position.z,1.0);\n  gl_PointSize = 5.0 + a_rands * 12.0;\n}`;\n\nconst fragShader =  `\nprecision mediump float;\nuniform sampler2D tex;\nuniform float alpha;\n\nvoid main() {\n  vec4 color = texture2D(tex, gl_PointCoord);\n  gl_FragColor = vec4(color.rgb, color.a * alpha * 0.9);\n}`;\n\nexport {vertShader, fragShader};","/* eslint-disable no-restricted-globals */\nimport * as THREE from 'three';\nimport {vertShader, fragShader} from \"../shaders/LightTower\";\nimport Progress from './Progress';\n\nconst LightTower = {\n  new: (src, particleAmount, width, height, lightDuration, delay) => {\n    let loader = new THREE.TextureLoader();\n\n    const uniforms = {\n      tex: {\n        type: 't',\n        value: loader.load( src )\n      },\n      time: {type: '1f', value: 0},\n      limit: {type: '1f', value: 0},\n      height: {type: '1f', value: height},\n    }\n\n    const material = new THREE.ShaderMaterial( {\n      uniforms:       uniforms,\n      vertexShader:   vertShader,\n      fragmentShader: fragShader,\n      blending:       THREE.NormalBlending,\n      depthTest:      false,\n      depthWrite:     false,\n      transparent:    true,\n      visible: false\n    });\n\n    const geometry = new THREE.BufferGeometry();\n    let verts = new Float32Array( particleAmount * 3 );\n    let rands = new Float32Array( particleAmount * 1 );\n    let yrand = null;\n    for ( let i = 0, i3 = 0; i < particleAmount; i ++, i3 += 3 ) {\n      verts[ i3 ] = Math.random()*width - width / 2;\n      yrand = Math.random();\n      verts[ i3 + 1 ] = yrand*height - height / 2;\n      verts[ i3 + 2 ] = 0;\n      rands[ i ] = Math.random();\n\n    }\n    geometry.setAttribute( 'position', new THREE.BufferAttribute( verts, 3 ) );\n    geometry.setAttribute( 'a_rands', new THREE.BufferAttribute( rands, 1 ) );\n\n    const particleSystem = new THREE.Points( geometry, material );\n\n    particleSystem.progress = Progress.new(lightDuration, (t) => {\n      return t<.5 ? 2*t*t : -1+(4-2*t)*t;\n    });\n\n    particleSystem.lightUp = function (){\n      this.material.visible = true;\n      this.progress.start(delay);\n    }\n    particleSystem.step = function(){\n      this.material.uniforms.time.value += 0.1;\n      this.material.uniforms.limit.value = this.progress.getProgress();\n    }\n\n\n    return particleSystem;\n  }\n};\n\nexport default LightTower;","const vertShader =  `\nprecision mediump float;\nattribute float a_rands;\nuniform float height;\nuniform float time;\nvarying vec2 rand;\n  \nvoid main() {\n  rand = vec2(a_rands, (position.y + height/2.0) / height);\n  float blink = 0.3 + 0.7 * abs(sin(a_rands * 123.3 + time));\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n  gl_PointSize = 5.0 + a_rands * 10.0 * blink;\n}`;\n\nconst fragShader =  `\nprecision mediump float;\nuniform sampler2D tex;\nvarying vec2 rand;\nuniform float time;\nuniform float limit;\n\nvoid main() {\n  vec4 color = texture2D(tex, gl_PointCoord);\n  float show = rand.y < limit ? 1.0 : 0.0; \n  gl_FragColor = vec4(color.rgb, color.a * show);\n}`;\n\nexport {vertShader, fragShader};","/* eslint-disable no-restricted-globals */\nimport * as THREE from 'three';\nimport {vertShader, fragShader} from \"../shaders/HangingLight\";\nimport Progress from './Progress';\n\nconst HangingLight = {\n  new: (src, particleAmount, width, height, lightDuration, delay) => {\n    let loader = new THREE.TextureLoader();\n\n    const uniforms = {\n      tex: {\n        type: 't',\n        value: loader.load( src )\n      },\n      time: {type: '1f', value: 0},\n      limit: {type: '1f', value: 0},\n      height: {type: '1f', value: height},\n    }\n\n    const material = new THREE.ShaderMaterial( {\n      uniforms:       uniforms,\n      vertexShader:   vertShader,\n      fragmentShader: fragShader,\n      blending:       THREE.NormalBlending,\n      depthTest:      false,\n      depthWrite:     false,\n      transparent:    true,\n      visible: false\n    });\n\n    const geometry = new THREE.BufferGeometry();\n    let verts = new Float32Array( particleAmount * 3 );\n    let rands = new Float32Array( particleAmount * 1 );\n    let sin = null;\n    for ( let i = 0, i3 = 0; i < particleAmount; i ++, i3 += 3 ) {\n      verts[ i3 ] = Math.random()*width - width / 2;\n      sin = Math.sin(Math.PI + Math.PI * ((verts[ i3 ] + width/2) % (width / 4)) / (width / 4)) * 1.2;\n      verts[ i3 + 1 ] = sin * height - height / 2 + Math.random() * height / 3;\n      verts[ i3 + 2 ] = 0;\n      rands[ i ] = Math.random();\n\n    }\n    geometry.setAttribute( 'position', new THREE.BufferAttribute( verts, 3 ) );\n    geometry.setAttribute( 'a_rands', new THREE.BufferAttribute( rands, 1 ) );\n\n    const particleSystem = new THREE.Points( geometry, material );\n\n    particleSystem.step = function(){\n      this.material.uniforms.time.value += 0.1;\n      this.material.uniforms.limit.value = this.progress.getProgress();\n    }\n\n    particleSystem.progress = Progress.new(lightDuration , (t) => {\n      return t<.5 ? 2*t*t : -1+(4-2*t)*t;\n    });\n\n\n    particleSystem.lightUp = function (){\n      this.material.visible = true;\n      this.progress.start(delay);\n    }\n\n\n    return particleSystem;\n  }\n};\n\nexport default HangingLight;","const vertShader =  `\nprecision mediump float;\nattribute float a_rands;\nuniform float height;\nuniform float time;\nuniform float limit;\n  \nvoid main() {\n  float blink = 0.3 + 0.7 * abs(sin(a_rands * 123.3 + time));\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position.x, position.y * limit,0.0,1.0);\n  gl_PointSize = 5.0 + a_rands * 10.0 * blink;\n}`;\n\nconst fragShader =  `\nprecision mediump float;\nuniform sampler2D tex;\nuniform float time;\nuniform float limit;\n\nvoid main() {\n  vec4 color = texture2D(tex, gl_PointCoord);\n  float show = min(limit, 0.1) * 10.0; \n  gl_FragColor = vec4(color.rgb, color.a * show);\n}`;\n\nexport {vertShader, fragShader};","/* eslint-disable no-restricted-globals */\nimport * as THREE from 'three';\nimport SVGImage from './helpers/SVGImage';\nimport GLImage from './helpers/GLImage';\nimport Progress from './helpers/Progress';\nimport move from '@mixd/utils/functions/move';\nimport Video from './helpers/Video';\nimport Snow from './helpers/Snow';\nimport Lights from './helpers/Lights';\nimport LightTower from './helpers/LightTower';\nimport HangingLight from './helpers/HangingLights';\n\n\n/* OPTIMIZATION\n*  Use render-to-texture to render house mesh only once: https://threejs.org/examples/webgl_rtt.html\n* */\n\nclass CanvasContent {\n  constructor(colors) {\n    this.time = 0;\n  }\n\n  createContent(renderer) {\n    const cameraProgress = Progress.new(14000, (t) => {\n      return t<.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t;\n    }, () => {\n      title.lightUp();\n      lights.lightUp();\n      heading.progress.start(5000);\n      bodyCopy.progress.start(0);\n    });\n\n    window.startCamera = function() {\n      cameraProgress.start();\n      people3.p1.video.play();\n      people3.p2.video.play();\n      snow.tara = 1;\n    }\n\n    const heading = document.getElementById('heading');\n    heading.progress = Progress.new(500,(t) => {\n      return t<.5 ? 2*t*t : -1+(4-2*t)*t;\n    });\n\n    const bodyCopy = document.getElementById('bodyCopy');\n    bodyCopy.progress = Progress.new(1500, (t) => {\n      return t<.5 ? 2*t*t : -1+(4-2*t)*t;\n    });\n\n\n    const content = new THREE.Group();\n    content.scale.x = content.scale.y = Math.min(window.innerHeight / 1080, 1) * 13;\n    content.startY = 1200 * renderer.domElement.clientHeight / 1080;\n    content.resize = function(){\n      content.startY = 1200 * renderer.domElement.clientHeight / 1080;\n    }\n\n    if(window.innerWidth > 768){\n      window.addEventListener('mousemove', (ev) => {\n        content.tarx = ((ev.clientX - window.innerWidth/2) / (window.innerWidth/2));\n        content.tary = ((ev.clientY - window.innerHeight/2) / (window.innerHeight/2));\n      })\n    }\n\n    content.endZ = window.innerWidth > 600 ? -19000 : -21000;\n    content.tarx = 0;\n    content.tary = 0;\n    content.panY = 0;\n    let cameraTime = cameraProgress.getProgress();\n    let tarc = 1;\n    window.addEventListener('wheel', function(ev) {\n      if (!heading.progress.finished) return;\n      tarc += ev.deltaY * 0.003;\n      tarc = Math.max(0, Math.min(tarc, 1));\n    });\n\n    content.step = function(td) {\n      cameraTime = !cameraProgress.finished ? cameraProgress.getProgress() : cameraTime;\n      if (cameraTime > 0.7 || cameraProgress.finished) this.position.x = move(this.position.x, this.tarx * 500, td, 10);\n      if (cameraTime > 0.7 || cameraProgress.finished) this.panY = move(this.panY, this.tary * 50, td, 10);\n      if(cameraProgress.finished) {\n        cameraTime = move(cameraTime, tarc, td, 10);\n        this.position.z = this.endZ * cameraTime;\n        this.position.y = this.startY - this.startY * cameraTime - Number(this.panY);\n      } else {\n        this.position.y = this.startY - this.startY * cameraTime - Number(this.panY);\n        this.position.z = this.endZ * cameraTime;\n      }\n\n      heading.style.opacity = heading.progress.finished ? (cameraTime > 0.95 ? 1 : 0) : heading.progress.getProgress();\n      bodyCopy.style.opacity = bodyCopy.progress.finished ? (cameraTime > 0.95 ? 1 : 0) : bodyCopy.progress.getProgress();\n\n\n\n    }\n    \n\n    // const floor = SVGImage.new('imgs/floor.svg');\n    // content.add(floor);\n    // // floor.scale.x = floor.scale.y = 5;\n    // // floor.position.z = 9500;\n    // // floor.position.y = -2000;\n    // // floor.rotation.x = Math.PI*0.4;\n    // floor.scale.y = 0.3;\n    // floor.position.y = -400;\n\n    const house = SVGImage.new('imgs/house2.svg');\n    content.add(house);\n    house.position.y = 150;\n\n\n\n    const lights = new THREE.Group();\n    content.add(lights);\n    lights.position.y = 130;\n    lights.lightUp = function(){\n      lights.t1.lightUp();\n      lights.t2.lightUp();\n      lights.t3.lightUp();\n      lights.t4.lightUp();\n\n      lights.t5.lightUp();\n      lights.t6.lightUp();\n      lights.t7.lightUp();\n      lights.t8.lightUp();\n\n      lights.topleft.lightUp();\n      lights.topright.lightUp();\n      lights.center.lightUp();\n    }\n\n    const lightDuration = 1500;\n    lights.t1 = LightTower.new('imgs/light.png', 110, 33, 500, lightDuration, lightDuration * 0.75);\n    lights.add(lights.t1);\n    lights.t1.position.x = -415;\n    lights.t1.position.y = -90;\n\n    lights.t2 = LightTower.new('imgs/light.png', 110, 33, 500, lightDuration, lightDuration * 0.5);\n    lights.add(lights.t2);\n    lights.t2.position.x = -575;\n    lights.t2.position.y = -90;\n\n    lights.t3 = LightTower.new('imgs/light.png', 110, 33, 500, lightDuration, lightDuration * 0.25);\n    lights.add(lights.t3);\n    lights.t3.position.x = -735;\n    lights.t3.position.y = -90;\n\n    lights.t4 = LightTower.new('imgs/light.png', 110, 33, 500, lightDuration, 0);\n    lights.add(lights.t4);\n    lights.t4.position.x = -895;\n    lights.t4.position.y = -90;\n\n    lights.t5 = LightTower.new('imgs/light.png', 110, 33, 500, lightDuration, lightDuration * 0.75);\n    lights.add(lights.t5);\n    lights.t5.position.x = 415;\n    lights.t5.position.y = -90;\n\n    lights.t6 = LightTower.new('imgs/light.png', 110, 33, 500, lightDuration, lightDuration * 0.5);\n    lights.add(lights.t6);\n    lights.t6.position.x = 575;\n    lights.t6.position.y = -90;\n\n    lights.t7 = LightTower.new('imgs/light.png', 110, 33, 500, lightDuration, lightDuration * 0.25);\n    lights.add(lights.t7);\n    lights.t7.position.x = 735;\n    lights.t7.position.y = -90;\n\n    lights.t8 = LightTower.new('imgs/light.png', 110, 33, 500, lightDuration, 0);\n    lights.add(lights.t8);\n    lights.t8.position.x = 895;\n    lights.t8.position.y = -90;\n\n    lights.topleft = LightTower.new('imgs/light.png', 150, 33, 720, lightDuration, lightDuration);\n    lights.add(lights.topleft);\n    lights.topleft.rotation.z = -Math.PI / 2;\n    lights.topleft.position.x = -640;\n    lights.topleft.position.y = 310;\n\n    lights.topright = LightTower.new('imgs/light.png', 150, 33, 720, lightDuration, lightDuration);\n    lights.add(lights.topright);\n    lights.topright.rotation.z = Math.PI / 2;\n    lights.topright.position.x = 640;\n    lights.topright.position.y = 310;\n\n\n    lights.center = HangingLight.new('imgs/light.png', 200, 540, 90, lightDuration, lightDuration * 2);\n    lights.add(lights.center);\n    lights.center.position.x = 0;\n    lights.center.position.y = 360;\n\n\n\n\n    const title = new THREE.Group();\n    content.add(title);\n    title.position.y = 10;\n\n    title.bg = GLImage.new('imgs/title.png', 571, 57, renderer);\n    title.add(title.bg);\n    title.progress = Progress.new(1000);\n    title.lightUp = function(){\n      this.chars.forEach(c => {\n        c.material.visible = true;\n      });\n      this.progress.start(lightDuration * 4);\n    }\n    title.time = 0;\n    title.step = function(td){\n      if(this.finished) return;\n      this.time = this.progress.getProgress();\n\n      this.chars[0].material.opacity = Math.floor(this.time);\n      this.chars[1].material.opacity = this.time > 0.9 ? 1 : 0;\n      this.chars[2].material.opacity = (this.time > 0.8 || (this.time > 0.15 && this.time < 0.45)) ? 1 : 0;\n      this.chars[3].material.opacity = this.time > 0.7 ? 1 : 0;\n      this.chars[4].material.opacity = this.time > 0.6 ? 1 : 0;\n      this.chars[5].material.opacity = (this.time > 0.7 || (this.time > 0.35 && this.time < 0.45)) ? 1 : 0;\n      this.chars[6].material.opacity = this.time > 0.8 ? 1 : 0;\n      this.chars[7].material.opacity = (this.time > 0.9 || (this.time > 0 && this.time < 0.45)) ? 1 : 0;\n      this.chars[8].material.opacity = Math.floor(this.time);\n\n      if(this.progress.finished) this.finished = true;\n    }\n\n    title.chars = [];\n    title.chars[0] = GLImage.new('imgs/title_s.png', 57, 55, renderer);\n    title.add(title.chars[0]);\n    title.chars[0].position.x = -255.5;\n    title.chars[0].material.opacity = 0;\n    title.chars[0].material.visible = true;\n\n\n    title.chars[1] = GLImage.new('imgs/title_t.png', 49, 52, renderer);\n    title.add(title.chars[1]);\n    title.chars[1].position.x = -203;\n    title.chars[1].material.opacity = 0;\n    title.chars[1].material.visible = false;\n\n    title.chars[2] = GLImage.new('imgs/title_o.png', 68, 53, renderer);\n    title.add(title.chars[2]);\n    title.chars[2].position.x = -149;\n    title.chars[2].material.opacity = 0;\n    title.chars[2].material.visible = false;\n\n    title.chars[3] = GLImage.new('imgs/title_c.png', 66, 53, renderer);\n    title.add(title.chars[3]);\n    title.chars[3].position.x = -79;\n    title.chars[3].material.opacity = 0;\n    title.chars[3].material.visible = false;\n\n    title.chars[4] = GLImage.new('imgs/title_k.png', 62, 52, renderer);\n    title.add(title.chars[4]);\n    title.chars[4].position.x = -12;\n    title.chars[4].material.opacity = 0;\n    title.chars[4].material.visible = false;\n\n    title.chars[5] = GLImage.new('imgs/title_m.png', 68.5, 52, renderer);\n    title.add(title.chars[5]);\n    title.chars[5].position.x = 55.5;\n    title.chars[5].material.opacity = 0;\n    title.chars[5].material.visible = false;\n\n    title.chars[6] = GLImage.new('imgs/title_a.png', 68, 52, renderer);\n    title.add(title.chars[6]);\n    title.chars[6].position.x = 125;\n    title.chars[6].material.opacity = 0;\n    title.chars[6].material.visible = false;\n\n    title.chars[7] = GLImage.new('imgs/title_n.png', 58, 52, renderer);\n    title.add(title.chars[7]);\n    title.chars[7].position.x = 190;\n    title.chars[7].material.opacity = 0;\n    title.chars[7].material.visible = false;\n\n    title.chars[8] = GLImage.new('imgs/title_n.png', 57.5, 52, renderer);\n    title.add(title.chars[8]);\n    title.chars[8].position.x = 255;\n    title.chars[8].material.opacity = 0;\n    title.chars[8].material.visible = false;\n\n    const clock = new THREE.Group();\n    content.add(clock);\n    clock.position.y = -85;\n\n\n    clock.bg = SVGImage.new('imgs/clock.svg');\n    clock.add(clock.bg);\n\n    clock.hands = new THREE.Group();\n    clock.add(clock.hands);\n    clock.hands.rotation.y = -Math.PI*0.15;\n    clock.hands.step = function(td){\n      clock.hours.rotation.z -= td/10000;\n      clock.minutes.rotation.z -= (td/10000) * 12;\n    }\n\n    clock.hours = new THREE.Group();\n    clock.hands.add(clock.hours);\n    clock.hours.position.x = -2;\n    clock.hours.position.y = -2;\n    clock.hours.img = SVGImage.new('imgs/clock_h.svg', () => {\n      clock.hours.img.position.y = clock.hours.img.bsize.y * 0.4;\n    });\n    clock.hours.add(clock.hours.img);\n\n    clock.minutes = new THREE.Group();\n    clock.hands.add(clock.minutes);\n    clock.minutes.img = SVGImage.new('imgs/clock_m.svg', () => {\n      clock.minutes.img.position.y = clock.minutes.img.bsize.y * 0.4;\n    });\n    clock.minutes.add(clock.minutes.img);\n    clock.minutes.position.x = -2;\n    clock.minutes.position.y = -2;\n\n\n    const people1 = GLImage.new('imgs/people1.png', 723 * 0.8, 216 * 0.8, renderer);\n    content.add(people1);\n    people1.position.z = window.innerWidth > 600 ? 7000 : 9000;\n    people1.position.y = -140;\n    people1.position.x = 20;\n    people1.material.depthTest = true;\n    people1.material.depthWrite = true;\n    people1.material.alphaTest = 0.1;\n\n    const people2 = GLImage.new('imgs/people2.png', 1564 * 0.3, 354 * 0.3, renderer)\n    content.add(people2);\n    people2.position.z = window.innerWidth > 600 ? 15000 : 17000;\n    people2.position.y = -80;\n    people2.position.x = -35;\n    people2.material.depthTest = true;\n    people2.material.depthWrite = true;\n    people2.material.alphaTest = 0.1;\n\n    const people3 = new THREE.Group();\n    content.add(people3);\n    people3.position.z = window.innerWidth > 600 ? 18000 : 20000;\n    people3.position.y = -50;\n\n\n    people3.p1 = Video.new(['imgs/stock_naine_02.mp4', 'imgs/stock_naine_02.webmhd.webm']);\n    people3.add(people3.p1);\n    people3.p1.scale.x = 1920 * 0.05;\n    people3.p1.scale.y = 1080 * 0.05;\n    people3.p1.position.x = -60;\n    people3.p1.step = function(){\n      this.material.needsUpdate = true;\n    }\n\n    people3.p2 = Video.new(['imgs/stock_laps_03.mp4', 'imgs/stock_laps_03.webmhd.webm']);\n    people3.add(people3.p2);\n    people3.p2.scale.x = -1920 * 0.05;\n    people3.p2.scale.y = 1080 * 0.05;\n    people3.p2.position.x = 200;\n    people3.p2.position.z = -10;\n    people3.p2.time = 0;\n    people3.p2.prog = 0;\n    people3.p2.step = function(td){\n      this.time += 10;\n      this.material.needsUpdate = true;\n      this.prog = this.time % 10000;\n      if (this.prog < 5000) {\n        this.position.x = 200 - 400 * this.prog / 5000;\n        this.rotation.y = 0;\n      } else {\n        this.position.x = -200 + 400 * (this.prog - 5000) / 5000;\n        this.rotation.y = Math.PI;\n      }\n    }\n\n    const snow = Snow.new('imgs/snow.png', 1300, 2000, 2000, 20000);\n    content.add(snow);\n    snow.position.z = 9500;\n\n    return content;\n  }\n\n  start(scene, camera, renderer) {\n    this.content = this.createContent(renderer);\n    scene.background = new THREE.Color( 0x254234 );\n    scene.add(this.content);\n    camera.fov = 30;\n    camera.updateProjectionMatrix();\n  }\n\n  stop() {\n    // if(this.geometry) this.geometry.dispose();\n    // if(this.shaderMaterial) this.shaderMaterial.dispose();\n  }\n}\n\nexport default CanvasContent;","import './App.css';\nimport styled from 'styled-components';\nimport React from 'react';\nimport WebGLCanvas from './GLContent/helpers/WebGLCanvas';\nimport CanvasContent from './GLContent/CanvasContent';\nimport Data from './Data/data.json';\n\n\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  \n  audio {\n    opacity: 0;\n    pointer-events: none;\n  }\n`;\n\nconst Canvas = styled(WebGLCanvas)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 100%;\n  height: 100%;\n  max-width: 1920px;\n  max-height: 1080px;\n  z-index: 10;\n  border: 2px solid #E09E42;\n`;\n\nconst StartButton = styled.a`\n  position: absolute;\n  left: 50%;\n  top: 105vw;\n  transform: translate(-50%, 0);\n  display: block;\n  background: #254234;\n  color: #ffffff;\n  font-family: 'StockmannSans', Arial, sans-serif;\n  font-size: 24px;\n  font-weight: bold;\n  text-decoration: none;\n  text-transform: uppercase;\n  text-align: center;\n  padding: 1rem 2rem;\n  border: 4px solid #E09E42;\n  border-radius: 3px;\n  z-index: 20;\n  ${props => props.hide ? 'pointer-events: none;' : 'cursor:pointer;'}\n  opacity: ${props => props.hide ? 0 : 1};\n  transition: opacity 0.25s ease-in-out;\n  line-height: 1;\n  \n  @media screen and (min-width: 600px) {\n    font-size: 28px;\n    bottom: 10%;\n    top: unset;\n    transform: translate(-50%, 0);\n  }\n  \n  &:hover {\n    background: #E09E42;\n    color: #15241e;\n  }\n`;\n\nconst Videos = styled.div`\n  position: absolute;\n  z-index: 0;\n  opacity: 0;\n`;\n\nconst Heading = styled.p`\n  position: absolute;\n  top: 30%;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  font-family: 'StockmannSans', Arial, sans-serif;\n  font-size: 18px;\n  font-weight: 600;\n  z-index: 200;\n  color: #ffffff;\n  opacity: 0;\n  max-width: 320px;\n  pointer-events: none;\n  text-transform: uppercase;\n  line-height: 1;\n  \n  @media screen and (min-width: 600px) {\n    font-size: 20px;\n  }\n`;\n\nconst BodyCopy = styled.p`\n  position: absolute;\n  top: 60%;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  font-family: 'StockmannSans', Arial, sans-serif;\n  font-size: 18px;\n  font-weight: 300;\n  width: 40%;\n  min-width: 320px;\n  z-index: 200;\n  color: #ffffff;\n  opacity: 0;\n  pointer-events: none;\n  line-height: 1;\n  \n  @media screen and (min-width: 600px) {\n    bottom: max(10%, 40px);\n    top: unset;\n  }\n`;\n\nconst CanvasContainer = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  max-width: 1920px;\n  max-height: 1080px;\n  background: #254234;\n  \n  @media screen and (min-width: 320px) and (max-width: 767px) and (orientation: landscape) {\n    display: none\n  }\n`;\n\n\nconst MuteBtn = styled.a`\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  display: block;\n  cursor: pointer;\n  z-index: 400;\n  transform: scale(2);\n`;\n\nconst Portrait = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 70px;\n  height: 70px;\n  transform: translate(-50%, -50%);\n  z-index: 500;\n  display: none;\n  \n  @media screen and (min-width: 320px) and (max-width: 767px) and (orientation: landscape) {\n    display: block\n  }\n`;\n\nconst content = new CanvasContent();\nwindow.cameraStarted = false;\n\nfunction App(props) {\n  const [cameraStarted, setCameraStarted] = React.useState(false);\n  const [muted, setMuted] = React.useState(false);\n\n  return (\n    <Container className=\"app\">\n      <CanvasContainer>\n        <Canvas\n          loadContent={(scene, camera, renderer) => {\n            renderer.sortObjects = false;\n            renderer.precision = \"lowp\";\n            camera.far = 50000;\n            camera.updateProjectionMatrix();\n            content.start(scene, camera, renderer);\n          }}\n          unloadContent={() => {\n            content.stop();\n          }}\n          id=\"card-canvas\"\n          ambient={1}\n          performance=\"low-power\"\n        />\n        <StartButton hide={cameraStarted} onClick={() => {\n          if (cameraStarted) return;\n          setCameraStarted(true);\n          document.getElementById('music').play();\n          window.startCamera();\n        }}>{Data[props.lang].btn}</StartButton>\n        <Heading id=\"heading\">{Data[props.lang].heading}</Heading>\n        <BodyCopy id=\"bodyCopy\">\n          {Data[props.lang].body}\n        </BodyCopy>\n        {(!muted && cameraStarted) &&\n          <MuteBtn\n            onClick={() => {\n              document.getElementById('music').pause();\n              setMuted(true);\n            }}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"#ffffff\" d=\"M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z\" /></svg>\n          </MuteBtn>\n        }\n        {(muted && cameraStarted) &&\n          <MuteBtn\n            onClick={() => {\n              document.getElementById('music').play();\n              setMuted(false);\n            }}\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"#ffffff\" d=\"M3,9H7L12,4V20L7,15H3V9M16.59,12L14,9.41L15.41,8L18,10.59L20.59,8L22,9.41L19.41,12L22,14.59L20.59,16L18,13.41L15.41,16L14,14.59L16.59,12Z\" /></svg>\n          </MuteBtn>\n        }\n\n      </CanvasContainer>\n      \n      <Portrait>\n        <img src=\"imgs/portrait.svg\" alt=\"\"/>\n      </Portrait>\n\n      <Videos id=\"videos\"></Videos>\n      <audio id=\"music\" src=\"imgs/music.mp3\">\n      </audio>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconst host = window.location.host;\nlet basePath = \"/\";\n\nif (host === \"magic.mixd.ee\") {\n  basePath = \"/veeb/stockmann\";\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={basePath}>\n      <Switch>\n        <Route path=\"/en\">\n          <App lang=\"en\" />\n        </Route>\n        <Route path=\"/fi\">\n          <App lang=\"fi\" />\n        </Route>\n        <Route path=\"/sv\">\n          <App lang=\"sv\" />\n        </Route>\n        <Route path=\"/et\">\n          <App lang=\"et\" />\n        </Route>\n        <Route path=\"/lv\">\n          <App lang=\"lv\" />\n        </Route>\n        <Route path=\"/\">\n          <App lang=\"en\" />\n        </Route>\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}